contract C {
    state S1;
    state S2;

    C@S1() {
        ->S1;
    }

    transaction toS2(C@Owned >> S2 this)
    {
        ->S2;
    }

    transaction toS1(C@Owned >> S1 this)
    {
        ->S1;
    }
}


main contract FieldTypeMismatch {
    C@S1 c;

    transaction t1() {
        c.toS2();
        // Error: c needs to be in state S1.
    }
}

resource contract Money {}

resource contract Wallet {
    Wallet@Empty () {
        ->Empty;
    }

    state Empty {}
    state Full {
        Money@Owned money;
    }

    transaction removeMoney(Wallet@Full >> Empty this) returns Money@Owned {
        Money@Owned m = money; // TODO: remove ownership annotation
        ->Empty;
        return m;
    }
}