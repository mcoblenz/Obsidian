// tests type checking for constructors

contract Thing {
    int x;
    string y;
    bool z;

    Thing@Owned() {
        this.x = 1;
        this.y = "a";
        this.z = true;
    }

    Thing@Owned(int x) {
        this.x = x;
        this.y = "b";
        this.z = true;
    }

    Thing@Owned(int x, string y, bool z) {
        this.x = x;
        this.y = y;
        this.z = z;
    }

    // should fail: constructor name error
    OtherThing(int x) {
        this.x = x;
    }
}

main contract Construct {

    transaction constructThings() {
        Thing@Owned thing1 = new Thing();
        // should fail for each constructor above
        Thing@Owned thing2 = new Thing("hi");
        // should fail for each constructor above
        Thing@Owned thing3 = new Thing(1, 2, 3);
        // should fail twice: undefined contract
        Stuff stuff = new Stuff();
    }

}