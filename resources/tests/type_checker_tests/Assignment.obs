// checks that assignments work as expected

asset contract C_Owned {
    int f1;
}

main contract C_Shared {
    int f1;

    C_Shared@S()  {
        f1 = 0;
        ->S(f2 = f1);
    }

    state S { int f2; }
    state T {}

    transaction setFields1(C_Shared@Shared this) {
        this.f1 = 3;
        // should fail: this type isn't guaranteed to have this field
        this.f2 = 2;
        // should fail: this field doesn't exist
        this.f3 = 1;
    }

    transaction setFields2(C_Shared@S this) {
        this.f2 = 2;
    }
}

contract C {
    int i;

    transaction t(int a) {

        int b = 2;
        b = 1;
        // should fail: bool is not int
        b = true;
        C_Shared c = new C_Shared();
        // should fail: C_Owned is not C_Shared
        c = new C_Owned();
        c.setFields1();

        C_Shared cs = new C_Shared();
        cs.setFields2();
        i = 3;
        this.i = 3;
        // should fail: variable j undefined
        j = 2;
        // should fail: assignment to non-assignable expression
        3 = 5;

	    // should fail: 2 is not a reference type and cannot have fields.
	    2.f = 3;
    }
}
