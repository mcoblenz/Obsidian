/* Things we should test about states
 * ------------------------------------------------
 * Main Contract:
 *   - transaction calls should fail if the state is not correct
 * Transitions:
 *   - transitions work correctly from a particular state, but also from the most general type "C"
 *   - conserved fields are correctly assigned after a state transition
 *   - the update clause works
 */
main contract States {

    States() {
        ->S1(x = 0, z = 0);
    }

    state S1 {
        int x;
        /* z is a conserved field */
        int z;
    }

    transaction set_x(int x) available in S1 {
        this.x = x;
    }

    transaction set_z(int z) available in S1 {
        this.z = z;
    }

    transaction toS2() available in S1 {
        ->S2(y = x);
    }

    transaction getX() returns int available in S1 {
        return x;
    }

    state S2 {
        int y;
        int z;
    }

    transaction toS1() available in S2 {
        ->S1(x = y);
    }

    transaction getY() returns int available in S2 {
        return y;
    }

    transaction getZ() returns int {
        return z;
    }

    transaction get_X_or_Y() returns int {
        int ret;
        switch this {
            case S1 {
                ret = getX();
            }
            case S2 {
                ret = getY();
            }
        }
        return ret;
    }

    transaction flipStates(int x, int y) {
        switch this {
            case S1 {
                ->S2(y = y);
            }
            case S2 {
                ->S1(x = x);
            }
        }
    }
}