//contract IntNode {
//    IntNode@Unowned next;
//    int payload;
//
//    transaction setNext(IntNode@Unowned n){
//        next = n;
//    }
//
//    transaction setPayload(int p){
//        payload = p;
//    }
//}

contract IntLLEnd{
    int payload;

    IntLLEnd@Owned(int p){
        payload = p;
    }

    transaction sum() returns int {
        return payload;
    }
}

contract IntLL1{
    int payload;
    IntLLEnd@Unowned next;

    IntLL1@Owned(int p, IntLLEnd n){
        payload = p;
        next = n;
    }
}

contract IntLL2{
    int payload;
    IntLL1@Unowned next;

    IntLL2@Owned(int p, IntLL1 n){
        payload = p;
        next = n;
    }
}

contract IntLL3{
    int payload;
    IntLL2@Unowned next;

    IntLL3@Owned(int p, IntLL2 n){
        payload = p;
        next = n;
    }
}

main contract LinkedListShort {
    IntLLEnd@Owned list;

    transaction LinkedListShort() {
    }

    transaction main() returns int {
        IntLLEnd tail = new IntLLEnd(1);
        IntLL1 e1 = new IntLL1(2, tail);
        IntLL2 e2 = new IntLL2(4, e1);
        IntLL3 e3 = new IntLL3(8, e2);
        return list.sum();
    }

    transaction sum() returns int {
        return list.sum();
    }
}
